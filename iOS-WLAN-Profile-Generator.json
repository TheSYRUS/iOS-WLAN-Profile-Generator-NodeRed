[
    {
        "id": "main_flow",
        "type": "tab",
        "label": "WLAN Profile Generator (iOS)",
        "disabled": false,
        "info": "# iOS WLAN-Profil Generator Flow\n\nDieser Flow erstellt eine vollst√§ndige Web-App zur Generierung von iOS WLAN-Profilen (.mobileconfig Dateien).\n\n## Features:\n- ‚úÖ Moderne Web-UI mit Glasmorphismus-Design\n- ‚úÖ Vollst√§ndige WLAN-Konfiguration (SSID, Passwort, Verschl√ºsselung)\n- ‚úÖ Sicherheitsoptionen (MAC-Randomisierung, Private Adressen)\n- ‚úÖ DNS-Server Konfiguration\n- ‚úÖ Proxy-Einstellungen (PAC & Manual)\n- ‚úÖ Apple-konforme XML-Generierung\n- ‚úÖ Automatischer Download im Browser\n- ‚úÖ Lokale Speicherung auf Server\n- ‚úÖ Debug-Logging\n- ‚úÖ E-Mail-Versendung (optional)\n- ‚úÖ Status-Anzeige und Counter\n\n## Verwendung:\n1. √ñffnen Sie das Node-RED Dashboard\n2. Navigieren Sie zum \"WLAN Profile Generator\" Tab\n3. F√ºllen Sie die Formularfelder aus\n4. Klicken Sie auf \"Profil Generieren\"\n5. Die .mobileconfig Datei wird automatisch heruntergeladen\n6. Profile werden in `/data/wifi_profiles/` gespeichert\n\n## Konfiguration:\n- **File Storage**: Pfad in File-Node anpassen\n- **E-Mail**: SMTP-Einstellungen in E-Mail-Node konfigurieren\n- **Dashboard**: Tab und Group nach Bedarf anpassen\n\n## Sicherheit:\n- Passw√∂rter werden nur tempor√§r im Browser verarbeitet\n- Keine Speicherung von Kennw√∂rtern in Node-RED\n- Profile werden lokal erstellt und verteilt\n\nErstellt von: Node-RED WLAN Profile Generator v2.0"
    },
    {
        "id": "wifi_template_node",
        "type": "ui_template",
        "z": "main_flow",
        "group": "wifi_profile_group",
        "name": "WLAN Profile Generator UI",
        "order": 1,
        "width": "24",
        "height": "20",
        "format": "<!-- Node-RED Dashboard Template f√ºr iOS WLAN-Profil Generator -->\n<style>\n    .wifi-generator {\n        max-width: 100%;\n        padding: 20px;\n        background: linear-gradient(135deg, #0c0c0c 0%, #1a1a2e 50%, #16213e 100%);\n        min-height: 100vh;\n        color: #e0e6ed;\n        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    }\n\n    .header {\n        text-align: center;\n        margin-bottom: 30px;\n        position: relative;\n    }\n\n    .header::before {\n        content: '';\n        position: absolute;\n        top: -15px;\n        left: 50%;\n        transform: translateX(-50%);\n        width: 80px;\n        height: 3px;\n        background: linear-gradient(90deg, #00d2ff, #3a7bd5);\n        border-radius: 2px;\n    }\n\n    .header h1 {\n        font-size: 2rem;\n        font-weight: 300;\n        margin-bottom: 8px;\n        background: linear-gradient(45deg, #00d2ff, #3a7bd5);\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent;\n        background-clip: text;\n    }\n\n    .form-grid {\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n        gap: 20px;\n        margin-bottom: 30px;\n    }\n\n    .form-section {\n        background: rgba(255, 255, 255, 0.05);\n        backdrop-filter: blur(10px);\n        border-radius: 12px;\n        padding: 20px;\n        border: 1px solid rgba(255, 255, 255, 0.1);\n        position: relative;\n    }\n\n    .form-section::before {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        height: 2px;\n        background: linear-gradient(90deg, #00d2ff, #3a7bd5);\n    }\n\n    .section-title {\n        font-size: 1.1rem;\n        font-weight: 500;\n        margin-bottom: 15px;\n        display: flex;\n        align-items: center;\n        gap: 8px;\n        color: #00d2ff;\n    }\n\n    .form-group {\n        margin-bottom: 15px;\n    }\n\n    .form-group label {\n        display: block;\n        margin-bottom: 6px;\n        font-weight: 500;\n        color: #b8c6db;\n        font-size: 0.85rem;\n    }\n\n    .form-control {\n        width: 100%;\n        padding: 10px 12px;\n        background: rgba(255, 255, 255, 0.08);\n        border: 1px solid rgba(255, 255, 255, 0.2);\n        border-radius: 6px;\n        color: #e0e6ed;\n        font-size: 0.9rem;\n        transition: all 0.3s ease;\n        box-sizing: border-box;\n    }\n\n    .form-control:focus {\n        outline: none;\n        border-color: #00d2ff;\n        box-shadow: 0 0 0 2px rgba(0, 210, 255, 0.1);\n        background: rgba(255, 255, 255, 0.12);\n    }\n\n    .checkbox-group {\n        display: flex;\n        align-items: center;\n        gap: 8px;\n        margin-top: 5px;\n    }\n\n    .checkbox-group input[type=\"checkbox\"] {\n        width: 16px;\n        height: 16px;\n        accent-color: #00d2ff;\n        cursor: pointer;\n    }\n\n    .dns-list {\n        display: flex;\n        flex-direction: column;\n        gap: 8px;\n    }\n\n    .dns-item {\n        display: flex;\n        gap: 8px;\n        align-items: center;\n    }\n\n    .dns-item input {\n        flex: 1;\n    }\n\n    .btn-small {\n        background: #ff4757;\n        color: white;\n        border: none;\n        padding: 6px 10px;\n        border-radius: 4px;\n        cursor: pointer;\n        font-size: 0.8rem;\n        transition: all 0.3s ease;\n    }\n\n    .btn-small:hover {\n        background: #ff3742;\n        transform: scale(1.05);\n    }\n\n    .btn-add {\n        background: #2ed573;\n        color: white;\n        border: none;\n        padding: 8px 12px;\n        border-radius: 4px;\n        cursor: pointer;\n        font-size: 0.8rem;\n        margin-top: 8px;\n        transition: all 0.3s ease;\n    }\n\n    .btn-add:hover {\n        background: #26d67e;\n    }\n\n    .proxy-config {\n        margin-top: 10px;\n        padding-top: 10px;\n        border-top: 1px solid rgba(255, 255, 255, 0.1);\n    }\n\n    .action-buttons {\n        display: flex;\n        gap: 15px;\n        justify-content: center;\n        margin-top: 30px;\n        flex-wrap: wrap;\n    }\n\n    .btn-primary {\n        background: linear-gradient(45deg, #00d2ff, #3a7bd5);\n        color: white;\n        border: none;\n        padding: 12px 30px;\n        border-radius: 8px;\n        font-size: 1rem;\n        font-weight: 500;\n        cursor: pointer;\n        transition: all 0.3s ease;\n    }\n\n    .btn-primary:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 8px 25px rgba(0, 210, 255, 0.3);\n    }\n\n    .btn-secondary {\n        background: rgba(255, 255, 255, 0.1);\n        color: #e0e6ed;\n        border: 1px solid rgba(255, 255, 255, 0.2);\n        padding: 12px 30px;\n        border-radius: 8px;\n        font-size: 1rem;\n        font-weight: 500;\n        cursor: pointer;\n        transition: all 0.3s ease;\n    }\n\n    .btn-secondary:hover {\n        background: rgba(255, 255, 255, 0.15);\n        transform: translateY(-2px);\n    }\n\n    .preview-section {\n        background: rgba(255, 255, 255, 0.05);\n        backdrop-filter: blur(10px);\n        border-radius: 12px;\n        padding: 20px;\n        border: 1px solid rgba(255, 255, 255, 0.1);\n        margin-top: 25px;\n    }\n\n    .preview-content {\n        background: #0f0f23;\n        border-radius: 6px;\n        padding: 15px;\n        font-family: 'Courier New', monospace;\n        font-size: 0.8rem;\n        max-height: 300px;\n        overflow-y: auto;\n        border: 1px solid rgba(255, 255, 255, 0.1);\n        white-space: pre-wrap;\n        word-wrap: break-word;\n    }\n\n    .hidden {\n        display: none;\n    }\n\n    .status-msg {\n        margin-top: 15px;\n        padding: 10px 15px;\n        border-radius: 6px;\n        font-weight: 500;\n        text-align: center;\n    }\n\n    .status-success {\n        background: rgba(46, 213, 115, 0.2);\n        color: #2ed573;\n        border: 1px solid #2ed573;\n    }\n\n    .status-error {\n        background: rgba(255, 71, 87, 0.2);\n        color: #ff4757;\n        border: 1px solid #ff4757;\n    }\n\n    .nr-dashboard-template {\n        height: auto !important;\n        overflow: visible !important;\n    }\n</style>\n\n<div class=\"wifi-generator\">\n    <div class=\"header\">\n        <h1>üì± iOS WLAN-Profil Generator</h1>\n        <p>Professionelle iOS-WLAN-Profile erstellen</p>\n    </div>\n\n    <div class=\"form-grid\">\n        <!-- WLAN-Netzwerk -->\n        <div class=\"form-section\">\n            <h3 class=\"section-title\">üì∂ WLAN-Netzwerk</h3>\n            \n            <div class=\"form-group\">\n                <label for=\"nr-ssid\">WLAN-Name (SSID)</label>\n                <input type=\"text\" id=\"nr-ssid\" class=\"form-control\" placeholder=\"MeinWLAN\" required>\n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"nr-password\">WLAN-Passwort</label>\n                <input type=\"password\" id=\"nr-password\" class=\"form-control\" placeholder=\"Sicheres Passwort\">\n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"nr-encryption\">Verschl√ºsselungstyp</label>\n                <select id=\"nr-encryption\" class=\"form-control\">\n                    <option value=\"WPA2\">WPA2</option>\n                    <option value=\"WPA3\">WPA3</option>\n                    <option value=\"WEP\">WEP</option>\n                    <option value=\"None\">Keine</option>\n                </select>\n            </div>\n\n            <div class=\"checkbox-group\">\n                <input type=\"checkbox\" id=\"nr-autoJoin\" checked>\n                <label for=\"nr-autoJoin\">Automatisch verbinden</label>\n            </div>\n\n            <div class=\"checkbox-group\">\n                <input type=\"checkbox\" id=\"nr-hiddenNetwork\">\n                <label for=\"nr-hiddenNetwork\">Verstecktes WLAN</label>\n            </div>\n        </div>\n\n        <!-- Sicherheit -->\n        <div class=\"form-section\">\n            <h3 class=\"section-title\">üîê Sicherheit & Datenschutz</h3>\n\n            <div class=\"checkbox-group\">\n                <input type=\"checkbox\" id=\"nr-disableMacRandom\">\n                <label for=\"nr-disableMacRandom\">MAC-Randomisierung AUS</label>\n            </div>\n\n            <div class=\"checkbox-group\">\n                <input type=\"checkbox\" id=\"nr-disablePrivateAddress\">\n                <label for=\"nr-disablePrivateAddress\">Private WLAN-Adresse AUS</label>\n            </div>\n        </div>\n\n        <!-- Netzwerk -->\n        <div class=\"form-section\">\n            <h3 class=\"section-title\">üåê Netzwerkoptionen</h3>\n\n            <div class=\"form-group\">\n                <label>DNS-Server</label>\n                <div class=\"dns-list\" id=\"nr-dnsList\">\n                    <div class=\"dns-item\">\n                        <input type=\"text\" class=\"form-control dns-input\" placeholder=\"8.8.8.8\">\n                        <button type=\"button\" class=\"btn-small\" onclick=\"removeDNS(this)\">√ó</button>\n                    </div>\n                </div>\n                <button type=\"button\" class=\"btn-add\" onclick=\"addDNS()\">+ DNS hinzuf√ºgen</button>\n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"nr-proxyType\">Proxy-Typ</label>\n                <select id=\"nr-proxyType\" class=\"form-control\" onchange=\"toggleProxyConfig()\">\n                    <option value=\"none\">Kein Proxy</option>\n                    <option value=\"Auto\">Automatisch (PAC)</option>\n                    <option value=\"Manual\">Manuell</option>\n                </select>\n            </div>\n\n            <div class=\"proxy-config hidden\" id=\"nr-proxyConfig\">\n                <div class=\"form-group\" id=\"nr-pacUrlGroup\">\n                    <label for=\"nr-pacUrl\">PAC-URL</label>\n                    <input type=\"url\" id=\"nr-pacUrl\" class=\"form-control\" placeholder=\"http://example.com/proxy.pac\">\n                </div>\n                \n                <div id=\"nr-manualProxyGroup\" class=\"hidden\">\n                    <div class=\"form-group\">\n                        <label for=\"nr-proxyHost\">Proxy-Host</label>\n                        <input type=\"text\" id=\"nr-proxyHost\" class=\"form-control\" placeholder=\"proxy.example.com\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"nr-proxyPort\">Proxy-Port</label>\n                        <input type=\"number\" id=\"nr-proxyPort\" class=\"form-control\" placeholder=\"8080\">\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- Profil-Einstellungen -->\n        <div class=\"form-section\">\n            <h3 class=\"section-title\">üìú Profil-Einstellungen</h3>\n\n            <div class=\"form-group\">\n                <label for=\"nr-profileName\">Profil-Name</label>\n                <input type=\"text\" id=\"nr-profileName\" class=\"form-control\" placeholder=\"Firmen-WLAN\" required>\n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"nr-removalPassword\">Entfernungsschutz</label>\n                <input type=\"password\" id=\"nr-removalPassword\" class=\"form-control\" placeholder=\"Optional\">\n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"nr-payloadIdentifier\">Payload Identifier</label>\n                <input type=\"text\" id=\"nr-payloadIdentifier\" class=\"form-control\" placeholder=\"com.firma.wifi\" required>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"action-buttons\">\n        <button class=\"btn-primary\" onclick=\"generateProfile()\">üì± Profil Generieren</button>\n        <button class=\"btn-secondary\" onclick=\"resetForm()\">üîÑ Zur√ºcksetzen</button>\n        <button class=\"btn-secondary\" onclick=\"togglePreview()\">üëÅÔ∏è Vorschau</button>\n    </div>\n\n    <div id=\"nr-statusMsg\"></div>\n\n    <div class=\"preview-section hidden\" id=\"nr-previewSection\">\n        <h3 class=\"section-title\">üëÅÔ∏è XML-Vorschau</h3>\n        <div class=\"preview-content\" id=\"nr-previewContent\"></div>\n    </div>\n</div>\n\n<script>\n(function(scope) {\n    function addDNS() {\n        const dnsList = document.getElementById('nr-dnsList');\n        const dnsItem = document.createElement('div');\n        dnsItem.className = 'dns-item';\n        dnsItem.innerHTML = `\n            <input type=\"text\" class=\"form-control dns-input\" placeholder=\"DNS-Server\">\n            <button type=\"button\" class=\"btn-small\" onclick=\"removeDNS(this)\">√ó</button>\n        `;\n        dnsList.appendChild(dnsItem);\n    }\n\n    function removeDNS(button) {\n        const dnsList = document.getElementById('nr-dnsList');\n        if (dnsList.children.length > 1) {\n            button.parentElement.remove();\n        }\n    }\n\n    function toggleProxyConfig() {\n        const proxyType = document.getElementById('nr-proxyType').value;\n        const proxyConfig = document.getElementById('nr-proxyConfig');\n        const pacUrlGroup = document.getElementById('nr-pacUrlGroup');\n        const manualProxyGroup = document.getElementById('nr-manualProxyGroup');\n\n        if (proxyType === 'none') {\n            proxyConfig.classList.add('hidden');\n        } else {\n            proxyConfig.classList.remove('hidden');\n            \n            if (proxyType === 'Auto') {\n                pacUrlGroup.classList.remove('hidden');\n                manualProxyGroup.classList.add('hidden');\n            } else if (proxyType === 'Manual') {\n                pacUrlGroup.classList.add('hidden');\n                manualProxyGroup.classList.remove('hidden');\n            }\n        }\n    }\n\n    function generateUUID() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n            const r = Math.random() * 16 | 0;\n            const v = c == 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n\n    function generateProfile() {\n        try {\n            // Daten sammeln\n            const ssid = document.getElementById('nr-ssid').value;\n            const password = document.getElementById('nr-password').value;\n            const encryption = document.getElementById('nr-encryption').value;\n            const autoJoin = document.getElementById('nr-autoJoin').checked;\n            const hiddenNetwork = document.getElementById('nr-hiddenNetwork').checked;\n            const disableMacRandom = document.getElementById('nr-disableMacRandom').checked;\n            const disablePrivateAddress = document.getElementById('nr-disablePrivateAddress').checked;\n            const profileName = document.getElementById('nr-profileName').value;\n            const removalPassword = document.getElementById('nr-removalPassword').value;\n            const payloadIdentifier = document.getElementById('nr-payloadIdentifier').value;\n            const proxyType = document.getElementById('nr-proxyType').value;\n            const pacUrl = document.getElementById('nr-pacUrl').value;\n            const proxyHost = document.getElementById('nr-proxyHost').value;\n            const proxyPort = document.getElementById('nr-proxyPort').value;\n\n            // DNS-Server sammeln\n            const dnsInputs = document.querySelectorAll('#nr-dnsList .dns-input');\n            const dnsServers = Array.from(dnsInputs)\n                .map(input => input.value.trim())\n                .filter(dns => dns !== '');\n\n            // Validierung\n            if (!ssid || !profileName || !payloadIdentifier) {\n                showStatus('Bitte f√ºllen Sie alle Pflichtfelder aus!', 'error');\n                return;\n            }\n\n            // UUID generieren\n            const profileUUID = generateUUID();\n            const wifiUUID = generateUUID();\n\n            // XML generieren\n            let xml = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n    <key>PayloadContent</key>\n    <array>\n        <dict>\n            <key>SSID_STR</key>\n            <string>${escapeXml(ssid)}</string>\n            <key>HIDDEN_NETWORK</key>\n            <${hiddenNetwork}/>\n            <key>AutoJoin</key>\n            <${autoJoin}/>`;\n\n            if (encryption !== 'None' && password) {\n                xml += `\n            <key>Password</key>\n            <string>${escapeXml(password)}</string>`;\n            }\n\n            xml += `\n            <key>EncryptionType</key>\n            <string>${encryption}</string>`;\n\n            if (disableMacRandom) {\n                xml += `\n            <key>DisableAssociationMACRandomization</key>\n            <true/>`;\n            }\n\n            if (disablePrivateAddress) {\n                xml += `\n            <key>DisablePrivateAddress</key>\n            <true/>`;\n            }\n\n            if (dnsServers.length > 0) {\n                xml += `\n            <key>DNSServers</key>\n            <array>`;\n                dnsServers.forEach(dns => {\n                    xml += `\n                <string>${escapeXml(dns)}</string>`;\n                });\n                xml += `\n            </array>`;\n            }\n\n            // Proxy-Konfiguration\n            if (proxyType !== 'none') {\n                xml += `\n            <key>ProxyType</key>\n            <string>${proxyType}</string>`;\n\n                if (proxyType === 'Auto' && pacUrl) {\n                    xml += `\n            <key>ProxyPACURL</key>\n            <string>${escapeXml(pacUrl)}</string>`;\n                } else if (proxyType === 'Manual' && proxyHost && proxyPort) {\n                    xml += `\n            <key>HTTPProxy</key>\n            <dict>\n                <key>HTTPProxyServerName</key>\n                <string>${escapeXml(proxyHost)}</string>\n                <key>HTTPProxyServerPort</key>\n                <integer>${proxyPort}</integer>\n            </dict>`;\n                }\n            }\n\n            xml += `\n            <key>PayloadDisplayName</key>\n            <string>WLAN (${escapeXml(ssid)})</string>\n            <key>PayloadIdentifier</key>\n            <string>${escapeXml(payloadIdentifier)}.wifi</string>\n            <key>PayloadType</key>\n            <string>com.apple.wifi.managed</string>\n            <key>PayloadUUID</key>\n            <string>${wifiUUID}</string>\n            <key>PayloadVersion</key>\n            <integer>1</integer>\n        </dict>\n    </array>\n    <key>PayloadDisplayName</key>\n    <string>${escapeXml(profileName)}</string>\n    <key>PayloadIdentifier</key>\n    <string>${escapeXml(payloadIdentifier)}</string>\n    <key>PayloadType</key>\n    <string>Configuration</string>\n    <key>PayloadUUID</key>\n    <string>${profileUUID}</string>\n    <key>PayloadVersion</key>\n    <integer>1</integer>`;\n\n            if (removalPassword) {\n                xml += `\n    <key>PayloadRemovalDisallowed</key>\n    <false/>\n    <key>PayloadRemovalPassword</key>\n    <string>${escapeXml(removalPassword)}</string>`;\n            }\n\n            xml += `\n</dict>\n</plist>`;\n\n            // Datei herunterladen\n            downloadProfile(xml, `${ssid}_WiFi_Profile.mobileconfig`);\n            \n            // Vorschau aktualisieren\n            document.getElementById('nr-previewContent').textContent = xml;\n            \n            // Node-RED Message senden\n            scope.send({\n                payload: {\n                    xml: xml,\n                    filename: `${ssid}_WiFi_Profile.mobileconfig`,\n                    ssid: ssid,\n                    profileName: profileName,\n                    encryption: encryption,\n                    timestamp: new Date().toISOString()\n                },\n                topic: \"wifi_profile_generated\"\n            });\n            \n            showStatus('iOS WLAN-Profil erfolgreich generiert!', 'success');\n            \n        } catch (error) {\n            showStatus('Fehler beim Generieren des Profils: ' + error.message, 'error');\n        }\n    }\n\n    function escapeXml(unsafe) {\n        if (typeof unsafe !== 'string') return unsafe;\n        return unsafe.replace(/[<>&'\"]/g, function (c) {\n            switch (c) {\n                case '<': return '&lt;';\n                case '>': return '&gt;';\n                case '&': return '&amp;';\n                case '\\'': return '&apos;';\n                case '\"': return '&quot;';\n            }\n        });\n    }\n\n    function downloadProfile(content, filename) {\n        const blob = new Blob([content], { type: 'application/x-apple-aspen-config' });\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = filename;\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n    }\n\n    function resetForm() {\n        document.querySelectorAll('.form-control').forEach(input => {\n            if (input.type === 'checkbox') {\n                input.checked = input.id === 'nr-autoJoin';\n            } else {\n                input.value = '';\n            }\n        });\n        \n        // DNS-Liste zur√ºcksetzen\n        const dnsList = document.getElementById('nr-dnsList');\n        dnsList.innerHTML = `\n            <div class=\"dns-item\">\n                <input type=\"text\" class=\"form-control dns-input\" placeholder=\"8.8.8.8\">\n                <button type=\"button\" class=\"btn-small\" onclick=\"removeDNS(this)\">√ó</button>\n            </div>\n        `;\n        \n        // Proxy zur√ºcksetzen\n        document.getElementById('nr-proxyType').value = 'none';\n        toggleProxyConfig();\n        \n        // Vorschau verstecken\n        document.getElementById('nr-previewSection').classList.add('hidden');\n        \n        // Standard-Werte setzen\n        document.getElementById('nr-profileName').value = 'WLAN-Konfiguration';\n        document.getElementById('nr-payloadIdentifier').value = 'com.company.wifi';\n        \n        showStatus('Formular zur√ºckgesetzt', 'success');\n    }\n\n    function togglePreview() {\n        const previewSection = document.getElementById('nr-previewSection');\n        previewSection.classList.toggle('hidden');\n    }\n\n    function showStatus(message, type) {\n        const statusDiv = document.getElementById('nr-statusMsg');\n        statusDiv.className = `status-msg status-${type}`;\n        statusDiv.textContent = message;\n        statusDiv.style.display = 'block';\n\n        setTimeout(() => {\n            statusDiv.style.display = 'none';\n        }, 4000);\n    }\n\n    // Funktionen global verf√ºgbar machen\n    window.addDNS = addDNS;\n    window.removeDNS = removeDNS;\n    window.toggleProxyConfig = toggleProxyConfig;\n    window.generateProfile = generateProfile;\n    window.resetForm = resetForm;\n    window.togglePreview = togglePreview;\n\n    // Initialisierung\n    document.addEventListener('DOMContentLoaded', function() {\n        document.getElementById('nr-profileName').value = 'WLAN-Konfiguration';\n        document.getElementById('nr-payloadIdentifier').value = 'com.company.wifi';\n    });\n\n})(this);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 190,
        "y": 100,
        "wires": [
            [
                "profile_processor"
            ]
        ]
    },
    {
        "id": "profile_processor",
        "type": "function",
        "z": "main_flow",
        "name": "Profile Processor",
        "func": "// Verarbeitung der generierten WLAN-Profile\n\nif (msg.topic === \"wifi_profile_generated\") {\n    const profile = msg.payload;\n    \n    // Dateiname f√ºr Speicherung vorbereiten\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    const sanitizedSSID = profile.ssid.replace(/[^a-zA-Z0-9]/g, '_');\n    const filename = `${timestamp}_${sanitizedSSID}_WiFi_Profile.mobileconfig`;\n    \n    // Verschiedene Ausgabe-Nachrichten vorbereiten\n    \n    // 1. F√ºr File Output\n    const fileMsg = {\n        payload: profile.xml,\n        filename: filename,\n        topic: \"save_profile\"\n    };\n    \n    // 2. F√ºr Debug/Logging\n    const logMsg = {\n        payload: {\n            action: \"wifi_profile_generated\",\n            ssid: profile.ssid,\n            profileName: profile.profileName,\n            encryption: profile.encryption,\n            timestamp: profile.timestamp,\n            filename: filename\n        },\n        topic: \"profile_log\"\n    };\n    \n    // 3. F√ºr eventuelle E-Mail-Versendung\n    const emailMsg = {\n        payload: {\n            to: \"\", // Kann sp√§ter konfiguriert werden\n            subject: `iOS WLAN-Profil: ${profile.ssid}`,\n            text: `Ein neues iOS WLAN-Profil wurde erstellt:\\n\\nSSID: ${profile.ssid}\\nProfil-Name: ${profile.profileName}\\nVerschl√ºsselung: ${profile.encryption}\\nErstellt am: ${profile.timestamp}`,\n            attachments: [{\n                filename: filename,\n                content: profile.xml,\n                contentType: \"application/x-apple-aspen-config\"\n            }]\n        },\n        topic: \"email_profile\"\n    };\n    \n    // 4. Status-Update f√ºr Dashboard\n    const statusMsg = {\n        payload: {\n            status: \"success\",\n            message: `WLAN-Profil '${profile.ssid}' erfolgreich erstellt`,\n            profileCount: flow.get(\"profileCount\") || 0 + 1\n        },\n        topic: \"status_update\"\n    };\n    \n    // Profile-Counter erh√∂hen\n    flow.set(\"profileCount\", (flow.get(\"profileCount\") || 0) + 1);\n    \n    // Alle Nachrichten an verschiedene Ausg√§nge senden\n    return [fileMsg, logMsg, emailMsg, statusMsg];\n    \n} else {\n    // Andere Nachrichten unver√§ndert weiterleiten\n    return [null, msg, null, null];\n}",
        "outputs": 4,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 100,
        "wires": [
            [
                "file_output"
            ],
            [
                "debug_log"
            ],
            [
                "email_node"
            ],
            [
                "status_display"
            ]
        ]
    },
    {
        "id": "file_output",
        "type": "file",
        "z": "main_flow",
        "name": "Save Profile",
        "filename": "/data/wifi_profiles/{{filename}}",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 670,
        "y": 60,
        "wires": [
            [
                "file_success"
            ]
        ]
    },
    {
        "id": "debug_log",
        "type": "debug",
        "z": "main_flow",
        "name": "Profile Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 100,
        "wires": []
    },
    {
        "id": "status_display",
        "type": "ui_text",
        "z": "main_flow",
        "group": "wifi_profile_group",
        "order": 2,
        "width": "12",
        "height": "1",
        "name": "Status Display",
        "label": "Status:",
        "format": "{{msg.payload.message}}",
        "layout": "row-left",
        "className": "",
        "x": 690,
        "y": 180,
        "wires": []
    },
    {
        "id": "file_success",
        "type": "ui_toast",
        "z": "main_flow",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "File Saved Toast",
        "x": 900,
        "y": 60,
        "wires": []
    },
    {
        "id": "profile_counter",
        "type": "ui_numeric",
        "z": "main_flow",
        "name": "Profile Counter",
        "label": "Generierte Profile:",
        "tooltip": "",
        "group": "wifi_profile_group",
        "order": 3,
        "width": "6",
        "height": "1",
        "wrap": false,
        "passthru": false,
        "topic": "profileCount",
        "topicType": "str",
        "format": "{{value}}",
        "min": 0,
        "max": "9999",
        "step": 1,
        "className": "",
        "x": 690,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "inject_reset_counter",
        "type": "inject",
        "z": "main_flow",
        "name": "Reset Counter",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 470,
        "y": 220,
        "wires": [
            [
                "profile_counter"
            ]
        ]
    },
    {
        "id": "email_node",
        "type": "e-mail",
        "z": "main_flow",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "Email Profile",
        "dname": "WLAN Profile Mailer",
        "x": 680,
        "y": 140,
        "wires": []
    },
    {
        "id": "wifi_profile_group",
        "type": "ui_group",
        "name": "iOS WLAN-Profil Generator",
        "tab": "wifi_profile_tab",
        "order": 1,
        "disp": true,
        "width": "24",
        "collapse": false,
        "className": ""
    },
    {
        "id": "wifi_profile_tab",
        "type": "ui_tab",
        "name": "üì± WLAN Profile Generator",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]
